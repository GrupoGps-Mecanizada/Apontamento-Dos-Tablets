/**
 * Configura√ß√µes do Frontend - Monitor Usiminas
 * 
 * IMPORTANTE: Substitua a URL abaixo pela URL real do seu Google Apps Script
 */

// ============================================================================
// CONFIGURA√á√ÉO PRINCIPAL
// ============================================================================

const CONFIG_FRONTEND = {
    // SUBSTITUA esta URL pela URL real do seu Google Apps Script
    API_URL: 'https://script.google.com/macros/s/SEU_SCRIPT_ID_AQUI/exec',
    
    // Intervalo de atualiza√ß√£o autom√°tica (5 minutos)
    UPDATE_INTERVAL: 5 * 60 * 1000,
    
    // Timeout para requisi√ß√µes HTTP (30 segundos)
    REQUEST_TIMEOUT: 30000,
    
    // N√∫mero m√°ximo de tentativas em caso de erro
    MAX_RETRIES: 3,
    
    // Modo debug (mostrar logs detalhados no console)
    DEBUG_MODE: true,
    
    // Usar dados simulados (para desenvolvimento/teste)
    USE_MOCK_DATA: true, // Mude para false quando conectar com a API real
    
    // Vers√£o do sistema
    VERSION: '1.0.0'
};

// ============================================================================
// CONFIGURA√á√ïES DOS EQUIPAMENTOS
// ============================================================================

const EQUIPAMENTOS_CONFIG = {
    // Hor√°rio limite para apontamentos normais
    HORA_LIMITE: '07:30',
    
    // M√≠nimo de registros esperados por equipamento
    MIN_REGISTROS: 3,
    
    // Total de equipamentos monitorados
    TOTAL_EQUIPAMENTOS: 24,
    
    // Categorias de equipamentos
    CATEGORIAS: {
        'AP': { nome: 'Alta Press√£o', total: 12, cor: '#0052cc' },
        'AV': { nome: 'Auto V√°cuo', total: 10, cor: '#00b8d9' },
        'HP': { nome: 'Hiper V√°cuo', total: 2, cor: '#36b37e' }
    }
};

// ============================================================================
// CONFIGURA√á√ïES DE INTERFACE
// ============================================================================

const UI_CONFIG = {
    // Cores dos status
    STATUS_COLORS: {
        'OK': '#00875a',
        'TARDIO': '#ff8b00',
        'SEM_REGISTRO': '#de350b',
        'POUCOS_REGISTROS': '#00b8d9',
        'CRITICO': '#de350b'
    },
    
    // Textos dos status
    STATUS_LABELS: {
        'OK': '‚úÖ Funcionando',
        'TARDIO': '‚ö†Ô∏è Tardio',
        'SEM_REGISTRO': '‚ùå Sem Registro',
        'POUCOS_REGISTROS': 'üîç Poucos Registros',
        'CRITICO': 'üö® Cr√≠tico'
    },
    
    // Prioridades dos status (para ordena√ß√£o)
    STATUS_PRIORITIES: {
        'SEM_REGISTRO': 4,
        'CRITICO': 3,
        'POUCOS_REGISTROS': 2,
        'TARDIO': 1,
        'OK': 0
    },
    
    // Anima√ß√µes
    ANIMATION_DURATION: 300,
    
    // Formato de data/hora
    DATE_FORMAT: 'pt-BR',
    TIME_FORMAT: { hour: '2-digit', minute: '2-digit' }
};

// ============================================================================
// CONFIGURA√á√ïES DE DADOS SIMULADOS (PARA TESTE)
// ============================================================================

const MOCK_DATA_CONFIG = {
    // Probabilidades para gera√ß√£o de status aleat√≥rios
    STATUS_PROBABILITIES: {
        'OK': 0.6,              // 60% chance
        'TARDIO': 0.15,         // 15% chance
        'POUCOS_REGISTROS': 0.12, // 12% chance
        'SEM_REGISTRO': 0.08,   // 8% chance
        'CRITICO': 0.05         // 5% chance
    },
    
    // Delay simulado para requisi√ß√µes (ms)
    SIMULATED_DELAY: 800,
    
    // Varia√ß√£o no delay (¬±ms)
    DELAY_VARIATION: 400
};

// ============================================================================
// VALIDA√á√ïES
// ============================================================================

/**
 * Validar se as configura√ß√µes est√£o corretas
 */
function validarConfiguracoes() {
    const problemas = [];
    
    // Verificar URL da API
    if (CONFIG_FRONTEND.API_URL.includes('SEU_SCRIPT_ID_AQUI')) {
        problemas.push('‚ùå URL da API n√£o foi configurada (ainda cont√©m SEU_SCRIPT_ID_AQUI)');
    }
    
    // Verificar se URL da API √© v√°lida
    try {
        new URL(CONFIG_FRONTEND.API_URL);
    } catch (error) {
        problemas.push('‚ùå URL da API inv√°lida');
    }
    
    // Verificar se intervalo de atualiza√ß√£o √© v√°lido
    if (CONFIG_FRONTEND.UPDATE_INTERVAL < 60000) {
        problemas.push('‚ö†Ô∏è Intervalo de atualiza√ß√£o muito baixo (m√≠nimo recomendado: 1 minuto)');
    }
    
    // Mostrar problemas encontrados
    if (problemas.length > 0) {
        console.warn('üîß PROBLEMAS DE CONFIGURA√á√ÉO DETECTADOS:');
        problemas.forEach(problema => console.warn(problema));
        
        if (CONFIG_FRONTEND.API_URL.includes('SEU_SCRIPT_ID_AQUI')) {
            console.warn('üí° Para corrigir, substitua SEU_SCRIPT_ID_AQUI pela URL real do seu Google Apps Script');
        }
        
        return false;
    }
    
    console.log('‚úÖ Configura√ß√µes validadas com sucesso');
    return true;
}

// ============================================================================
// FUN√á√ïES UTILIT√ÅRIAS DE CONFIGURA√á√ÉO
// ============================================================================

/**
 * Obter cor do status
 */
function obterCorStatus(status) {
    return UI_CONFIG.STATUS_COLORS[status] || '#8993a4';
}

/**
 * Obter label do status
 */
function obterLabelStatus(status) {
    return UI_CONFIG.STATUS_LABELS[status] || status;
}

/**
 * Obter prioridade do status
 */
function obterPrioridadeStatus(status) {
    return UI_CONFIG.STATUS_PRIORITIES[status] || 0;
}

/**
 * Verificar se est√° em modo de desenvolvimento
 */
function isModoDevelopment() {
    return CONFIG_FRONTEND.DEBUG_MODE || 
           CONFIG_FRONTEND.USE_MOCK_DATA || 
           window.location.hostname === 'localhost' ||
           window.location.hostname === '127.0.0.1';
}

/**
 * Atualizar configura√ß√£o da API
 */
function configurarAPI(novaUrl) {
    CONFIG_FRONTEND.API_URL = novaUrl;
    CONFIG_FRONTEND.USE_MOCK_DATA = false;
    
    console.log('‚úÖ URL da API atualizada:', novaUrl);
    console.log('‚úÖ Modo simulado desativado');
    
    // Salvar no localStorage para persistir
    try {
        localStorage.setItem('monitor_usiminas_api_url', novaUrl);
    } catch (error) {
        console.warn('‚ö†Ô∏è N√£o foi poss√≠vel salvar configura√ß√£o no localStorage');
    }
}

/**
 * Carregar configura√ß√£o salva (se existir)
 */
function carregarConfiguracaoSalva() {
    try {
        const urlSalva = localStorage.getItem('monitor_usiminas_api_url');
        if (urlSalva && !urlSalva.includes('SEU_SCRIPT_ID_AQUI')) {
            CONFIG_FRONTEND.API_URL = urlSalva;
            CONFIG_FRONTEND.USE_MOCK_DATA = false;
            console.log('‚úÖ Configura√ß√£o carregada do localStorage');
        }
    } catch (error) {
        console.warn('‚ö†Ô∏è N√£o foi poss√≠vel carregar configura√ß√£o do localStorage');
    }
}

// ============================================================================
// INICIALIZA√á√ÉO
// ============================================================================

// Carregar configura√ß√£o salva quando o script carrega
carregarConfiguracaoSalva();

// Validar configura√ß√µes quando o script carrega
document.addEventListener('DOMContentLoaded', function() {
    if (CONFIG_FRONTEND.DEBUG_MODE) {
        console.log('üîß CONFIGURA√á√ïES DO SISTEMA:');
        console.log('API URL:', CONFIG_FRONTEND.API_URL);
        console.log('Modo Debug:', CONFIG_FRONTEND.DEBUG_MODE);
        console.log('Dados Simulados:', CONFIG_FRONTEND.USE_MOCK_DATA);
        console.log('Vers√£o:', CONFIG_FRONTEND.VERSION);
        console.log('Update Interval:', CONFIG_FRONTEND.UPDATE_INTERVAL / 60000, 'minutos');
        
        // Mostrar comandos √∫teis
        console.log('\nüí° COMANDOS √öTEIS NO CONSOLE:');
        console.log('configurarAPI("https://script.google.com/...") - Configurar URL da API');
        console.log('validarConfiguracoes() - Validar configura√ß√µes');
        console.log('CONFIG_FRONTEND - Ver todas as configura√ß√µes');
    }
    
    validarConfiguracoes();
});

// ============================================================================
// EXPORTAR CONFIGURA√á√ïES (para uso global)
// ============================================================================

// Disponibilizar configura√ß√µes globalmente
window.CONFIG_FRONTEND = CONFIG_FRONTEND;
window.EQUIPAMENTOS_CONFIG = EQUIPAMENTOS_CONFIG;
window.UI_CONFIG = UI_CONFIG;
window.MOCK_DATA_CONFIG = MOCK_DATA_CONFIG;

// Disponibilizar fun√ß√µes utilit√°rias globalmente
window.configurarAPI = configurarAPI;
window.validarConfiguracoes = validarConfiguracoes;
window.obterCorStatus = obterCorStatus;
window.obterLabelStatus = obterLabelStatus;
window.obterPrioridadeStatus = obterPrioridadeStatus;
window.isModoDevelopment = isModoDevelopment;
